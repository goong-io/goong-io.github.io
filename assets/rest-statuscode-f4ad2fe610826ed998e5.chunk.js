(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{WCkG:function(t,e,n){var r=n("mXjL");r=r.default||r,t.exports={component:r,props:{frontMatter:{title:"Error Code",id:"errorcode",description:"Goong error code.",contentType:"specification",order:6,layout:"page",hideFeedback:!0,products:["Documentation"]}}}},mXjL:function(t,e,n){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=u(n("q1tI")),c=(n("yr+R"),n("cQZ0"),u(n("1wO5")));function u(t){return t&&t.__esModule?t:{default:t}}function i(){return(i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}).apply(this,arguments)}function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function p(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=y(t);if(e){var o=y(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return s(this,n)}}function s(t,e){return!e||"object"!==r(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function y(t){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var d={title:"Error Code",id:"errorcode",description:"Goong error code.",contentType:"specification",order:6,layout:"page",hideFeedback:!0,products:["Documentation"],headings:[]},h=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(s,t);var e,n,r,u=p(s);function s(){return a(this,s),u.apply(this,arguments)}return e=s,(n=[{key:"render",value:function(){var t=this.props;return o.default.createElement(c.default,i({},t,{frontMatter:d}),o.default.createElement("pre",null,o.default.createElement("code",null,'"OK"',"\n",'"BAD_REQUEST": Thông tin request ko hợp lệ ( sai tham số hoặc cách truyền tham số)',"\n",'"NOT_FOUND" : Không tìm thấy thông tin request yêu cầu ( geocode ko có kết quả, ko tìm được routing giữa các điểm mong muốn)',"\n",'"ERROR" : Lỗi xử lý phía server, thường là các vấn đề liên quan đến hoạt động của các dịch vụ đang chạy',"\n","\n","status_code: 403 : API_KEY_MISSING || API_KEY_INVALID || API_KEY_UNAUTHORIZED (Các lỗi liên quan tới API Key)","\n","status_code: 429: OVER_RATE_LIMIT (Lỗi API Key vượt quá giới hạn request)","\n","status_code: 400: HTTPS_REQUIRED (Lỗi url không chứa https)","\n")))}}])&&f(e.prototype,n),r&&f(e,r),s}(o.default.PureComponent);e.default=h}}]);
//# sourceMappingURL=rest-statuscode-f4ad2fe610826ed998e5.chunk.js.map